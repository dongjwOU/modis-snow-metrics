pro get_css_indics2, newcv, fract,albed, quali,bname,first_idx, last_idx, css_st, css_ed, stidx, edidx

;get_css_indics2, newcv, fract, albed, quali, first_idx, last_idx, css_st, css_ed, stidx, edidx
;input newcv, first snow day index, last snow day index, resonable css first index, resonable css last index
;output first css index, last css index
;use find_forward_consequtive_snow and find_backward_consecutive_snow.pro 


;---initilize the first_css_idx and last_css_idx with -1

stidx  = -1
edidx  = -1

num=n_elements(newcv)

;---check if first_idx, css_st,  css_ed, last_idx are in increasing order

if (first_idx LE css_st and css_st LE css_ed and css_ed LE last_idx ) EQ 0 then begin
return
endif



;--- check if there is un-breaked period between css_st and css_ed, if not, return first_css_idx=-1 and last_css_idx=-1

idx_nosnow = where(newcv(css_st:css_ed) EQ 25,no_snow_cnt)

if no_snow_cnt GT 0 then begin   ; do not get reasonable css first and last indics

return

endif

;----
find_forward_consequtive_snow_v2,newcv, fract, albed, bname, num_point

find_backward_consequtive_snow_v2,newcv,fract, albed, bname, num_point


return

end


 
 